# Traefik Ingress Controller Configuration
# This manifest file sets up Traefik as the Ingress Controller for the Kubernetes cluster.
# Traefik handles incoming traffic and routes it to the appropriate services based on rules.

---
# ServiceAccount Definition
# Creates a service account for Traefik that provides an identity for the Traefik pods
# running in the Kubernetes cluster. This identity is used for authentication and
# authorization purposes.
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress-controller
  namespace: kube-system
---
# ClusterRole Definition
# Defines the cluster-wide permissions required by Traefik:
# - Access to Services, Endpoints, and Secrets for configuration and TLS
# - Access to Ingress resources for traffic routing configuration
# - Permission to update Ingress resource status
# These permissions are necessary for Traefik to function as an Ingress Controller
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik-ingress-controller
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik-ingress-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-ingress-controller
subjects:
  - kind: ServiceAccount
    name: traefik-ingress-controller
    namespace: kube-system
---
# ConfigMap Definition
# Contains Traefik's core configuration:
# - API and Dashboard settings (enabled on port 8080)
# - Entry points configuration:
#   * web: HTTP traffic on port 80
#   * websecure: HTTPS traffic on port 443
# - Kubernetes providers configuration for automatic service discovery
# - Logging level settings
apiVersion: v1
kind: ConfigMap
metadata:
  name: traefik-config
  namespace: kube-system
data:
  traefik.yaml: |
    api:
      dashboard: true
      insecure: true
    entryPoints:
      web:
        address: ":80"
      websecure:
        address: ":443"
    providers:
      kubernetesCRD: {}
      kubernetesIngress: {}
    log:
      level: INFO
---
# Deployment Definition
# Deploys the Traefik Ingress Controller pods:
# - Uses traefik:v2.10 image
# - Runs on a specific node (rpcloud) using nodeSelector
# - Mounts the ConfigMap for configuration
# - Exposes ports:
#   * 80: HTTP traffic
#   * 443: HTTPS traffic
#   * 8080: Admin dashboard
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik
  namespace: kube-system
  labels:
    app: traefik
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      serviceAccountName: traefik-ingress-controller
      nodeSelector:
        kubernetes.io/hostname: rpcloud
      containers:
        - name: traefik
          image: traefik:v2.10
          args:
            - --configfile=/etc/traefik/traefik.yaml
          ports:
            - name: web
              containerPort: 80
            - name: websecure
              containerPort: 443
            - name: admin
              containerPort: 8080
          volumeMounts:
            - name: config
              mountPath: /etc/traefik
      volumes:
        - name: config
          configMap:
            name: traefik-config
---
# Service Definition
# Exposes Traefik to the cluster and external traffic:
# - Type: NodePort makes Traefik accessible from outside the cluster
# - Ports exposed:
#   * 30080: HTTP traffic (forwards to port 80)
#   * 30443: HTTPS traffic (forwards to port 443)
#   * 30808: Dashboard access (forwards to port 8080)
# - Selector matches the Traefik deployment pods
apiVersion: v1
kind: Service
metadata:
  name: traefik
  namespace: kube-system
spec:
  type: NodePort
  ports:
    - protocol: TCP
      name: web
      port: 80
      nodePort: 30080
    - protocol: TCP
      name: websecure
      port: 443
      nodePort: 30443
    - protocol: TCP
      name: admin
      port: 8080
      nodePort: 30808
  selector:
    app: traefik
